{"version":3,"sources":["components/Header.js","utils/Api.js","components/Card.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/ImagePopup.js","components/App.js","serviceWorker.js","index.js","images/logo.svg"],"names":["Header","className","src","logo","alt","api","baseUrl","headers","this","_baseUrl","_headers","fetch","then","res","ok","json","Promise","reject","status","catch","err","console","log","data","method","body","JSON","stringify","name","link","avatar","userName","about","userJob","cardIdDelete","LikeButtonIsActive","cardId","authorization","Card","props","key","id","onClick","onCardClick","style","backgroundImage","aria-label","likes","Main","state","userDescription","userAvatar","cards","getUserInfo","result","setState","getInitialCards","onEditProfile","onEditAvatar","onAddPlace","map","card","_id","length","React","Component","Footer","PopupWithForm","isOpen","noValidate","onClose","title","firstInput","secondInput","type","value","ImagePopup","App","handleEditAvatarClick","isEditAvatarPopupOpen","handleEditProfileClick","isEditProfilePopupOpen","handleAddPlaceClick","isAddPlacePopupOpen","closeAllPopups","selectedCard","undefined","handleCardClick","placeholder","minLength","maxLength","pattern","required","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.f14a0bff.chunk.js","sourcesContent":["import React from 'react';\r\nimport logo from '../images/logo.svg';\r\n\r\nfunction Header() {\r\n  return (\r\n    <header className=\"header\">\r\n      <img src={logo} alt=\"logo\" className=\"logo\" />\r\n      <div className=\"header__line\"></div>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;","class Api {\n  constructor({baseUrl, headers}) {\n    this._baseUrl = baseUrl;\n    this._headers = headers;\n  }\n\n  //receive initial cards data\n  getInitialCards() {\n    return fetch(`${this._baseUrl}/cards`, {\n      headers: this._headers\n    })\n    .then((res) => {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(`Something went wrong: ${res.status}`);\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n  }\n\n  //send card data to the server\n  sendCardData(data) {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: \"POST\",\n      body: JSON.stringify({\n        name: data.name,\n        link: data.link\n      }),\n      headers: this._headers\n    })\n    .then((res) => {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(`Something went wrong: ${res.status}`);\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n  }\n\n  //send the server the new profile picture link\n  sendUserAvatar(avatar) {\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\n      method: \"PATCH\",\n      body: JSON.stringify({\n        avatar: avatar.link\n      }),\n      headers: this._headers\n    })\n    .then((res) => {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(`Something went wrong: ${res.status}`);\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n  }\n\n  //send new user info to the server\n  sendUserInfo(data) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: \"PATCH\",\n      body: JSON.stringify({\n        name: data.userName,\n        about: data.userJob\n      }),\n      headers: this._headers\n    })\n    .then((res) => {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(`Something went wrong: ${res.status}`);\n    })\n    .catch((err) => {\n      console.log(err);\n    })\n  }\n\n  // loading user information from the server\n  getUserInfo() {\n    return fetch(`${this._baseUrl}/users/me`, {\n      headers: this._headers\n    })\n    .then((res) => {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(`Something went wrong: ${res.status}`);\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n  }\n\n  //delete card data from the server\n  deleteCard(cardIdDelete) {\n    return fetch(`${this._baseUrl}/cards/${cardIdDelete}`, {\n      method: \"DELETE\",\n      headers: this._headers\n    })\n    .then((res) => {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(`Something went wrong: ${res.status}`);\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n  }\n\n  changeLikeStatus(LikeButtonIsActive, cardId){\n    if(LikeButtonIsActive) {\n      //unlike heart button\n      return fetch(`${this._baseUrl}/cards/likes/${cardId}`, {\n        method: \"DELETE\",\n        headers: this._headers\n      })\n      .then((res) => {\n        if (res.ok) {\n          return res.json();\n        }\n        return Promise.reject(`Something went wrong: ${res.status}`);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n    }\n    else {\n      //like heart button\n      return fetch(`${this._baseUrl}/cards/likes/${cardId}`, {\n        method: \"PUT\",\n        headers: this._headers\n      })\n      .then((res) => {\n        if (res.ok) {\n          return res.json();\n        }\n        return Promise.reject(`Something went wrong: ${res.status}`);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n    }\n  }\n}\n\nconst api = new Api({\n  baseUrl: \"https://around.nomoreparties.co/v1/group-1\",\n  headers: {\n    authorization: \"ba7e8983-1c58-4c25-a942-eec3a1c30fce\",\n    \"Content-Type\": \"application/json\"\n  }\n});\n\nexport default api;\n","import React from 'react';\n\nfunction Card(props) {\n  function handleClick() {\n    props.onCardClick(props);\n  }\n\n  return (\n    <li key={props.id} className=\"element\">\n      <div className=\"element__rectangle\"></div>\n      <div className=\"element__container\">\n        <div onClick={handleClick} className=\"element__image\" style={{ backgroundImage: `url(${props.link})` }}></div>\n        <button className=\"element__delete-button hover-button\" aria-label=\"Delete\"></button>\n        <h2 className=\"element__title\">{props.name}</h2>\n        <div className=\"element__wrapper\">\n          <button className=\"element__heart hover-button\" aria-label=\"Like\"></button>\n          <p className=\"element__counter\">{props.likes}</p>\n        </div>\n      </div>\n    </li>\n  );\n\n}\n\nexport default Card;\n","import React from 'react';\nimport api from '../utils/Api';\nimport Card from './Card';\n\nclass Main extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      userName: '',\n      userDescription: '',\n      userAvatar: '',\n      cards: [],\n    };\n  }\n\n  componentDidMount() {\n    api.getUserInfo()\n    .then(result => {\n      this.setState({\n        userName: result.name,\n        userDescription: result.about,\n        userAvatar: result.avatar,\n      });\n    });\n\n    api.getInitialCards()\n    .then(result => {\n      this.setState({\n        cards: result,\n      });\n    });\n\n  }\n\n  render() {\n    return (\n      <main className=\"content\">\n        <section className=\"profile\">\n          <div className=\"profile__container\">\n              <div onClick={this.props.onEditProfile} className=\"profile__overlay-container\">\n                <div className=\"profile__overlay\"></div>\n                <img src={this.state.userAvatar} alt=\"profile-picture\" className=\"profile__picture\" />\n              </div>\n              <div className=\"profile__info\">\n              <div className=\"profile__wrapper\">\n                  <h1 className=\"profile__title\">{this.state.userName}</h1>\n                  <button onClick={this.props.onEditAvatar} className=\"profile__edit-button hover-button\" aria-label=\"Edit\"></button>\n              </div>\n              <p className=\"profile__subtitle\">{this.state.userDescription}</p>\n              </div>\n          </div>\n          <button onClick={this.props.onAddPlace} className=\"profile__add-button hover-button\" aria-label=\"Add\"></button>\n        </section>\n        <section className=\"elements\">\n          <ul className=\"elements__container\">\n            {this.state.cards.map(card => (\n              < Card onCardClick={this.props.onCardClick} id={card._id} link={card.link} name={card.name} likes={card.likes.length} />\n            ))}\n          </ul>\n        </section>\n      </main>\n    );\n  }\n}\n\nexport default Main;\n","import React from 'react';\n\nfunction Footer() {\n  return (\n    <footer className=\"footer\">\n      <p className=\"footer__copyright\">© 2020 Around the U.S.</p>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React from 'react';\n\nfunction PopupWithForm(props) {\n  return (\n    <div className={`popup popup_type_form popup_type_${props.name} ${props.isOpen ? 'popup_opened' : ''}`}>\n      <form className=\"form popup__container\" name={`${props.name}-info`} noValidate>\n        <button onClick={props.onClose} className=\"popup__close-icon hover-button\" aria-label=\"Close\"></button>\n        <h2 className=\"popup__title\">{props.title}</h2>\n        <fieldset className=\"popup__fields\">\n          <label className=\"popup__field\">\n            {props.firstInput}\n          </label>\n          <label className=\"popup__field\">\n            {props.secondInput}\n          </label>\n          <input type=\"submit\" className=\"popup__button hover-button\" value={props.value} />\n        </fieldset>\n      </form>\n    </div>\n  );\n}\n\n\nexport default PopupWithForm;\n","import React from 'react';\n\nfunction ImagePopup(props) {\n  console.log(props);\n  return (\n    <div className={`popup popup_type_image ${props.isOpen ? 'popup_opened' : ''}`}>\n      <div className=\"popup__container popup__container_image\">\n        <button onClick={props.onClose} className=\"popup__close-icon hover-button\" aria-label=\"Close\"></button>\n        <img src={`${props.isOpen ? props.isOpen.link : '#'}`} alt={`${props.isOpen ? props.isOpen.name : ''}`} className=\"popup__image\" />\n        <p className=\"popup__image-title\">{`${props.isOpen ? props.isOpen.name : ''}`}</p>\n      </div>\n    </div>\n  );\n}\n\nexport default ImagePopup;\n","import React from 'react';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport PopupWithForm from './PopupWithForm';\nimport ImagePopup from './ImagePopup';\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isEditProfilePopupOpen: false,\n      isAddPlacePopupOpen: false,\n      isEditAvatarPopupOpen: false,\n      selectedCard: 0,\n    };\n  }\n\n  handleEditAvatarClick = () => {\n    this.setState({\n      isEditAvatarPopupOpen: true,\n    });\n  }\n\n  handleEditProfileClick = () => {\n    this.setState({\n      isEditProfilePopupOpen: true,\n    });\n  }\n\n  handleAddPlaceClick = () => {\n    this.setState({\n      isAddPlacePopupOpen: true,\n    });\n  }\n\n  closeAllPopups = () => {\n    this.setState({\n      isEditProfilePopupOpen: false,\n      isAddPlacePopupOpen: false,\n      isEditAvatarPopupOpen: false,\n      selectedCard: undefined,\n    });\n    console.log(\"hello\");\n  }\n\n  handleCardClick = (card) => {\n    this.setState({\n      selectedCard: card,\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"page\">\n          < Header />\n          < Main\n            onEditProfile={this.handleEditAvatarClick}\n            onAddPlace={this.handleAddPlaceClick}\n            onEditAvatar={this.handleEditProfileClick}\n            onCardClick={this.handleCardClick}\n          />\n          < Footer />\n          {/* Edit name & occupation */}\n          < PopupWithForm name=\"edit\" title=\"Edit profile\" value=\"Save\"\n            isOpen={this.state.isEditProfilePopupOpen}\n            onClose={this.closeAllPopups}\n            firstInput={\n              <>\n                <input type=\"text\" id=\"name-input\" className=\"form__input popup__item popup__name\" name=\"userName\" placeholder=\"Name\" minLength=\"2\" maxLength=\"40\" pattern=\"[A-Za-z -]{1,}\" required />\n                <span id=\"name-input-error\" className=\"form__input-error\"></span>\n              </>\n            }\n            secondInput={\n              <>\n                <input type=\"text\" id=\"about-input\" className=\"form__input popup__item popup__about\" name=\"userJob\" placeholder=\"About me\" minLength=\"2\" maxLength=\"200\" required />\n                <span id=\"about-input-error\" className=\"form__input-error\"></span>\n              </>\n            }\n          />\n          {/* Adding new place */}\n          < PopupWithForm name=\"add\" title=\"New Place\" value=\"Create\"\n            isOpen={this.state.isAddPlacePopupOpen}\n            onClose={this.closeAllPopups}\n            firstInput={\n              <>\n                <input type=\"text\" id=\"title-input\" className=\"form__input popup__item popup__place-title\" name=\"name\" placeholder=\"Title\" minLength=\"1\" maxLength=\"30\" required />\n                <span id=\"title-input-error\" className=\"form__input-error\"></span>\n              </>\n            }\n            secondInput={\n              <>\n                <input type=\"url\" id=\"link-input\" className=\"form__input popup__item popup__image-link\" name=\"link\" placeholder=\"Link\" required />\n                <span id=\"link-input-error\" className=\"form__input-error\"></span>\n              </>\n            }\n          />\n          {/* Open image */}\n          < ImagePopup\n            isOpen={this.state.selectedCard}\n            onClose={this.closeAllPopups}\n          />\n          {/* Delete card? */}\n          < PopupWithForm name=\"delete\" title=\"Are you sure?\" value=\"Yes\" />\n          {/* Changing profile picture */}\n          < PopupWithForm name=\"picture\" title=\"Change profile picture\" value=\"Create\"\n            isOpen={this.state.isEditAvatarPopupOpen}\n            onClose={this.closeAllPopups}\n            firstInput={\n              <>\n                <input type=\"url\" id=\"link-input\" className=\"form__input popup__item popup__image-link\" name=\"link\" placeholder=\"Link\" required />\n                <span id=\"link-input-error\" className=\"form__input-error\"></span>\n              </>\n            }\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.3e6893cd.svg\";"],"sourceRoot":""}